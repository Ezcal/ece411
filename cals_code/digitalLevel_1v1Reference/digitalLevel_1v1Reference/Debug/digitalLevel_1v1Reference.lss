
digitalLevel_1v1Reference.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000302  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000302  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000334  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000d1  00000000  00000000  00000394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000078  00000000  00000000  00000465  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  000004dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000005f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a9  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003fc  00000000  00000000  000007c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00000bbd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

typedef enum { false = 0, true = 1  } bool; //Thank you Sabin

int main(void)
{
	DDRD = 0xFF; //Make D pins all outputs
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1<<0); //Make pin B0 output
  84:	20 9a       	sbi	0x04, 0	; 4
	PORTD = 0x00; //Set all D pins low
  86:	1b b8       	out	0x0b, r1	; 11
	PORTB &= (0<<0); //Set pin B0 to low
  88:	85 b1       	in	r24, 0x05	; 5
  8a:	15 b8       	out	0x05, r1	; 5
	unsigned int adc_value; //to store result of ADC conversion
	ADCSRA = (1<<ADPS2)|(1<<ADEN); //Set prescaler to 16, (1MHz / 16 = 62.5kHz) and enable conversion
  8c:	84 e8       	ldi	r24, 0x84	; 132
  8e:	80 93 7a 00 	sts	0x007A, r24
    while (1) 
    {
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		// Check X Axis
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		ADCSRA |= (1<<ADSC); //enable ADC
  92:	ea e7       	ldi	r30, 0x7A	; 122
  94:	f0 e0       	ldi	r31, 0x00	; 0
		ADMUX = 0xC2; //input on PC2
  96:	cc e7       	ldi	r28, 0x7C	; 124
  98:	d0 e0       	ldi	r29, 0x00	; 0
  9a:	72 ec       	ldi	r23, 0xC2	; 194
		while (ADCSRA & (1<<ADSC)); //wait for conversion to complete
		adc_value = ADCW; //store result of conversion
  9c:	a8 e7       	ldi	r26, 0x78	; 120
  9e:	b0 e0       	ldi	r27, 0x00	; 0
		}
		//Positive X4
		else if (adc_value > 760){
			PORTD &= (0<<4)&(0<<3);
			PORTD |= (1<<2)|(1<<1)|(1<<0);
			centered = false; //Set flag for next conversion
  a0:	30 e0       	ldi	r19, 0x00	; 0
				PORTD |= (1<<4); //Turn Center LED on
				centered = true; //Set flag for next conversion
			}
			else if (centered == false){ //If the previous result was not centered (y-axis)
				PORTD &= (0<<0)&(0<<4); //Turn X_CTRL and Center LED off
				centered = true; //Set flag for next conversion
  a2:	11 e0       	ldi	r17, 0x01	; 1
		
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		// Check Y Axis
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		ADCSRA |= (1<<ADSC); //enable ADC
		ADMUX = 0xC1; //input on pin PC1
  a4:	61 ec       	ldi	r22, 0xC1	; 193
    while (1) 
    {
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		// Check X Axis
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		ADCSRA |= (1<<ADSC); //enable ADC
  a6:	80 81       	ld	r24, Z
  a8:	80 64       	ori	r24, 0x40	; 64
  aa:	80 83       	st	Z, r24
		ADMUX = 0xC2; //input on PC2
  ac:	78 83       	st	Y, r23
		while (ADCSRA & (1<<ADSC)); //wait for conversion to complete
  ae:	80 81       	ld	r24, Z
  b0:	86 fd       	sbrc	r24, 6
  b2:	fd cf       	rjmp	.-6      	; 0xae <main+0x2e>
		adc_value = ADCW; //store result of conversion
  b4:	8d 91       	ld	r24, X+
  b6:	9c 91       	ld	r25, X
  b8:	11 97       	sbiw	r26, 0x01	; 1
		//Centered
		if (adc_value >= 685 && adc_value <= 710){
  ba:	ac 01       	movw	r20, r24
  bc:	4d 5a       	subi	r20, 0xAD	; 173
  be:	52 40       	sbci	r21, 0x02	; 2
  c0:	4a 31       	cpi	r20, 0x1A	; 26
  c2:	51 05       	cpc	r21, r1
  c4:	58 f4       	brcc	.+22     	; 0xdc <main+0x5c>
			if (centered){ //If the previous result was centered (this is from the y-axis)
  c6:	22 23       	and	r18, r18
  c8:	29 f0       	breq	.+10     	; 0xd4 <main+0x54>
				PORTD &= (0<<0); //Turn X_CTRL pin off
  ca:	8b b1       	in	r24, 0x0b	; 11
  cc:	1b b8       	out	0x0b, r1	; 11
				PORTD |= (1<<4); //Turn Center LED on
  ce:	5c 9a       	sbi	0x0b, 4	; 11
				centered = true; //Set flag for next conversion
  d0:	21 2f       	mov	r18, r17
  d2:	64 c0       	rjmp	.+200    	; 0x19c <main+0x11c>
			}
			else if (centered == false){ //If the previous result was not centered (y-axis)
				PORTD &= (0<<0)&(0<<4); //Turn X_CTRL and Center LED off
  d4:	8b b1       	in	r24, 0x0b	; 11
  d6:	1b b8       	out	0x0b, r1	; 11
				centered = true; //Set flag for next conversion
  d8:	21 2f       	mov	r18, r17
  da:	60 c0       	rjmp	.+192    	; 0x19c <main+0x11c>
			}
		}
		
		// ************ Negative X Values
		//Negative X1
		else if (adc_value < 685 && adc_value >= 670){
  dc:	ac 01       	movw	r20, r24
  de:	4e 59       	subi	r20, 0x9E	; 158
  e0:	52 40       	sbci	r21, 0x02	; 2
  e2:	4f 30       	cpi	r20, 0x0F	; 15
  e4:	51 05       	cpc	r21, r1
  e6:	38 f4       	brcc	.+14     	; 0xf6 <main+0x76>
			PORTD &= (0<<4)&(0<<2)&(0<<1); //turn center pin and select pins off
  e8:	8b b1       	in	r24, 0x0b	; 11
  ea:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<3)|(1<<0); //turn correct select pin on and X_CTRL power on
  ec:	8b b1       	in	r24, 0x0b	; 11
  ee:	89 60       	ori	r24, 0x09	; 9
  f0:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
  f2:	23 2f       	mov	r18, r19
  f4:	53 c0       	rjmp	.+166    	; 0x19c <main+0x11c>
		}
		//Negative X2
		else if (adc_value < 670 && adc_value >= 650){
  f6:	ac 01       	movw	r20, r24
  f8:	4a 58       	subi	r20, 0x8A	; 138
  fa:	52 40       	sbci	r21, 0x02	; 2
  fc:	44 31       	cpi	r20, 0x14	; 20
  fe:	51 05       	cpc	r21, r1
 100:	38 f4       	brcc	.+14     	; 0x110 <main+0x90>
			PORTD &= (0<<4)&(0<<2); //turn center off and correct select pins off
 102:	8b b1       	in	r24, 0x0b	; 11
 104:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<3)|(1<<1)|(1<<0); //turn on correct select pins and turn X_CTRL on
 106:	8b b1       	in	r24, 0x0b	; 11
 108:	8b 60       	ori	r24, 0x0B	; 11
 10a:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 10c:	23 2f       	mov	r18, r19
 10e:	46 c0       	rjmp	.+140    	; 0x19c <main+0x11c>
		}
		//Negative X3
		else if (adc_value < 650 && adc_value >= 625){
 110:	ac 01       	movw	r20, r24
 112:	41 57       	subi	r20, 0x71	; 113
 114:	52 40       	sbci	r21, 0x02	; 2
 116:	49 31       	cpi	r20, 0x19	; 25
 118:	51 05       	cpc	r21, r1
 11a:	38 f4       	brcc	.+14     	; 0x12a <main+0xaa>
			PORTD &= (0<<4)&(0<<1); //turn center off and correct select pins off
 11c:	8b b1       	in	r24, 0x0b	; 11
 11e:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<3)|(1<<2)|(1<<0); //turn on correct select pins and X_CTRL
 120:	8b b1       	in	r24, 0x0b	; 11
 122:	8d 60       	ori	r24, 0x0D	; 13
 124:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 126:	23 2f       	mov	r18, r19
 128:	39 c0       	rjmp	.+114    	; 0x19c <main+0x11c>
		}
		//Negative X4
		else if (adc_value < 625){
 12a:	81 37       	cpi	r24, 0x71	; 113
 12c:	42 e0       	ldi	r20, 0x02	; 2
 12e:	94 07       	cpc	r25, r20
 130:	38 f4       	brcc	.+14     	; 0x140 <main+0xc0>
			PORTD &= (0<<4); //Turn Center off
 132:	8b b1       	in	r24, 0x0b	; 11
 134:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<3)|(1<<2)|(1<<1)|(1<<0); //Turn select pins on and make sure X_CTRL is on
 136:	8b b1       	in	r24, 0x0b	; 11
 138:	8f 60       	ori	r24, 0x0F	; 15
 13a:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 13c:	23 2f       	mov	r18, r19
 13e:	2e c0       	rjmp	.+92     	; 0x19c <main+0x11c>
		}
		
		// ************ Positive X Values
		//Positive X1
		else if (adc_value > 710 && adc_value <= 725){
 140:	ac 01       	movw	r20, r24
 142:	47 5c       	subi	r20, 0xC7	; 199
 144:	52 40       	sbci	r21, 0x02	; 2
 146:	4f 30       	cpi	r20, 0x0F	; 15
 148:	51 05       	cpc	r21, r1
 14a:	28 f4       	brcc	.+10     	; 0x156 <main+0xd6>
			PORTD &= (0<<4)&(0<<1)&(0<<2)&(0<<3); //turn center and select pins all off
 14c:	8b b1       	in	r24, 0x0b	; 11
 14e:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<0); //make sure X_CTRL is on
 150:	58 9a       	sbi	0x0b, 0	; 11
			centered = false; //Set flag for next conversion
 152:	23 2f       	mov	r18, r19
 154:	23 c0       	rjmp	.+70     	; 0x19c <main+0x11c>
		}
		//Positive X2
		else if (adc_value > 725 && adc_value <= 745){
 156:	ac 01       	movw	r20, r24
 158:	46 5d       	subi	r20, 0xD6	; 214
 15a:	52 40       	sbci	r21, 0x02	; 2
 15c:	44 31       	cpi	r20, 0x14	; 20
 15e:	51 05       	cpc	r21, r1
 160:	38 f4       	brcc	.+14     	; 0x170 <main+0xf0>
			PORTD &= (0<<4)&(0<<3)&(0<<2); //turn center and correct select pins off
 162:	8b b1       	in	r24, 0x0b	; 11
 164:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<1)|(1<<0); //turn select pin and X_CTRL on
 166:	8b b1       	in	r24, 0x0b	; 11
 168:	83 60       	ori	r24, 0x03	; 3
 16a:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 16c:	23 2f       	mov	r18, r19
 16e:	16 c0       	rjmp	.+44     	; 0x19c <main+0x11c>
		}
		//Positive X3
		else if (adc_value > 745 && adc_value <= 760){
 170:	ac 01       	movw	r20, r24
 172:	4a 5e       	subi	r20, 0xEA	; 234
 174:	52 40       	sbci	r21, 0x02	; 2
 176:	4f 30       	cpi	r20, 0x0F	; 15
 178:	51 05       	cpc	r21, r1
 17a:	38 f4       	brcc	.+14     	; 0x18a <main+0x10a>
			PORTD &= (0<<4)&(0<<3)&(0<<1);
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<2)|(1<<0);
 180:	8b b1       	in	r24, 0x0b	; 11
 182:	85 60       	ori	r24, 0x05	; 5
 184:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 186:	23 2f       	mov	r18, r19
 188:	09 c0       	rjmp	.+18     	; 0x19c <main+0x11c>
		}
		//Positive X4
		else if (adc_value > 760){
 18a:	89 3f       	cpi	r24, 0xF9	; 249
 18c:	92 40       	sbci	r25, 0x02	; 2
 18e:	30 f0       	brcs	.+12     	; 0x19c <main+0x11c>
			PORTD &= (0<<4)&(0<<3);
 190:	8b b1       	in	r24, 0x0b	; 11
 192:	1b b8       	out	0x0b, r1	; 11
			PORTD |= (1<<2)|(1<<1)|(1<<0);
 194:	8b b1       	in	r24, 0x0b	; 11
 196:	87 60       	ori	r24, 0x07	; 7
 198:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 19a:	23 2f       	mov	r18, r19
		}
		
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		// Check Y Axis
		// @@@@@@@@@@@@@@@@@@@@@@@@@
		ADCSRA |= (1<<ADSC); //enable ADC
 19c:	80 81       	ld	r24, Z
 19e:	80 64       	ori	r24, 0x40	; 64
 1a0:	80 83       	st	Z, r24
		ADMUX = 0xC1; //input on pin PC1
 1a2:	68 83       	st	Y, r22
		while (ADCSRA & (1<<ADSC)); //Wait for conversion to complete
 1a4:	80 81       	ld	r24, Z
 1a6:	86 fd       	sbrc	r24, 6
 1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <main+0x124>
		adc_value = ADCW; //store result of conversion
 1aa:	8d 91       	ld	r24, X+
 1ac:	9c 91       	ld	r25, X
 1ae:	11 97       	sbiw	r26, 0x01	; 1
		//Centered
		if (adc_value >= 680 && adc_value <= 705){
 1b0:	ac 01       	movw	r20, r24
 1b2:	48 5a       	subi	r20, 0xA8	; 168
 1b4:	52 40       	sbci	r21, 0x02	; 2
 1b6:	4a 31       	cpi	r20, 0x1A	; 26
 1b8:	51 05       	cpc	r21, r1
 1ba:	58 f4       	brcc	.+22     	; 0x1d2 <main+0x152>
			if (centered){ //If previous result was centered
 1bc:	22 23       	and	r18, r18
 1be:	29 f0       	breq	.+10     	; 0x1ca <main+0x14a>
				PORTD &= (0<<5); //Set Y_CTRL pin low
 1c0:	8b b1       	in	r24, 0x0b	; 11
 1c2:	1b b8       	out	0x0b, r1	; 11
				PORTD |= (1<<4); //Set Center LED high
 1c4:	5c 9a       	sbi	0x0b, 4	; 11
				centered = true; //Set flag for next conversion
 1c6:	21 2f       	mov	r18, r17
 1c8:	6e cf       	rjmp	.-292    	; 0xa6 <main+0x26>
			}
			else if (centered == false){ //If previous result was not centered (from x-axis)
				PORTD &= (0<<5)&(0<<4); //Set Y_CTRL and Center low
 1ca:	8b b1       	in	r24, 0x0b	; 11
 1cc:	1b b8       	out	0x0b, r1	; 11
				centered = true; //Set flag for next conversion
 1ce:	21 2f       	mov	r18, r17
 1d0:	6a cf       	rjmp	.-300    	; 0xa6 <main+0x26>
			}
		}
		
		// ************ Negative Y Values
		//Negative Y1
		else if (adc_value < 680 && adc_value >= 665){
 1d2:	ac 01       	movw	r20, r24
 1d4:	49 59       	subi	r20, 0x99	; 153
 1d6:	52 40       	sbci	r21, 0x02	; 2
 1d8:	4f 30       	cpi	r20, 0x0F	; 15
 1da:	51 05       	cpc	r21, r1
 1dc:	30 f4       	brcc	.+12     	; 0x1ea <main+0x16a>
			PORTD &= (0<<7)&(0<<6)&(0<<4); //Set Center pin and corresponding select pins low
 1de:	8b b1       	in	r24, 0x0b	; 11
 1e0:	1b b8       	out	0x0b, r1	; 11
			PORTB |= (1<<0); //Set corresponding select pin high
 1e2:	28 9a       	sbi	0x05, 0	; 5
			PORTD |= (1<<5); //Make sure Y_CTRL pin is high			
 1e4:	5d 9a       	sbi	0x0b, 5	; 11
			centered = false; //Set flag for next conversion
 1e6:	23 2f       	mov	r18, r19
 1e8:	5e cf       	rjmp	.-324    	; 0xa6 <main+0x26>
		}
		//Negative Y2
		else if (adc_value < 665 && adc_value >= 645){
 1ea:	ac 01       	movw	r20, r24
 1ec:	45 58       	subi	r20, 0x85	; 133
 1ee:	52 40       	sbci	r21, 0x02	; 2
 1f0:	44 31       	cpi	r20, 0x14	; 20
 1f2:	51 05       	cpc	r21, r1
 1f4:	40 f4       	brcc	.+16     	; 0x206 <main+0x186>
			PORTD &= (0<<7)&(0<<4); //Set Center and corresponding select pins low
 1f6:	8b b1       	in	r24, 0x0b	; 11
 1f8:	1b b8       	out	0x0b, r1	; 11
			PORTB |= (1<<0); //Set corresponding select pin high
 1fa:	28 9a       	sbi	0x05, 0	; 5
			PORTD |= (1<<6)|(1<<5); //continue w/select pins and make sure Y_CTRL is high
 1fc:	8b b1       	in	r24, 0x0b	; 11
 1fe:	80 66       	ori	r24, 0x60	; 96
 200:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 202:	23 2f       	mov	r18, r19
 204:	50 cf       	rjmp	.-352    	; 0xa6 <main+0x26>
		}
		//Negative Y3
		else if (adc_value < 645 && adc_value >= 620){
 206:	ac 01       	movw	r20, r24
 208:	4c 56       	subi	r20, 0x6C	; 108
 20a:	52 40       	sbci	r21, 0x02	; 2
 20c:	49 31       	cpi	r20, 0x19	; 25
 20e:	51 05       	cpc	r21, r1
 210:	40 f4       	brcc	.+16     	; 0x222 <main+0x1a2>
			PORTD &= (0<<6)&(0<<4); //Set Center and corresponding select pins low
 212:	8b b1       	in	r24, 0x0b	; 11
 214:	1b b8       	out	0x0b, r1	; 11
			PORTB |= (1<<0); //Set corresponding select pin high
 216:	28 9a       	sbi	0x05, 0	; 5
			PORTD |= (1<<7)|(1<<5); //continue with select pins and make sure Y_CTRL is high
 218:	8b b1       	in	r24, 0x0b	; 11
 21a:	80 6a       	ori	r24, 0xA0	; 160
 21c:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 21e:	23 2f       	mov	r18, r19
 220:	42 cf       	rjmp	.-380    	; 0xa6 <main+0x26>
		}
		//Negative Y4
		else if (adc_value < 620){
 222:	8c 36       	cpi	r24, 0x6C	; 108
 224:	42 e0       	ldi	r20, 0x02	; 2
 226:	94 07       	cpc	r25, r20
 228:	40 f4       	brcc	.+16     	; 0x23a <main+0x1ba>
			PORTD &= (0<<4); //Set Center low
 22a:	8b b1       	in	r24, 0x0b	; 11
 22c:	1b b8       	out	0x0b, r1	; 11
			PORTB |= (1<<0); //Set corresponding select pin high
 22e:	28 9a       	sbi	0x05, 0	; 5
			PORTD |= (1<<7)|(1<<6)|(1<<5); //Set remaining select pins and Y_CTRL high
 230:	8b b1       	in	r24, 0x0b	; 11
 232:	80 6e       	ori	r24, 0xE0	; 224
 234:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 236:	23 2f       	mov	r18, r19
 238:	36 cf       	rjmp	.-404    	; 0xa6 <main+0x26>
		}
		
		// ************ Positive Y Values
		//Positive Y1
		else if (adc_value > 710 && adc_value <= 725){
 23a:	ac 01       	movw	r20, r24
 23c:	47 5c       	subi	r20, 0xC7	; 199
 23e:	52 40       	sbci	r21, 0x02	; 2
 240:	4f 30       	cpi	r20, 0x0F	; 15
 242:	51 05       	cpc	r21, r1
 244:	38 f4       	brcc	.+14     	; 0x254 <main+0x1d4>
			PORTD &= (0<<7)&(0<<6)&(0<<4); //Set Center low and corresponding select pins
 246:	8b b1       	in	r24, 0x0b	; 11
 248:	1b b8       	out	0x0b, r1	; 11
			PORTB &= (0<<0); //Set corresponding select pin low
 24a:	85 b1       	in	r24, 0x05	; 5
 24c:	15 b8       	out	0x05, r1	; 5
			PORTD |= (1<<5); //Set Y_CTRL high
 24e:	5d 9a       	sbi	0x0b, 5	; 11
			centered = false; //Set flag for next conversion
 250:	23 2f       	mov	r18, r19
 252:	29 cf       	rjmp	.-430    	; 0xa6 <main+0x26>
		}
		//Positive Y2
		else if (adc_value > 725 && adc_value <= 745){
 254:	ac 01       	movw	r20, r24
 256:	46 5d       	subi	r20, 0xD6	; 214
 258:	52 40       	sbci	r21, 0x02	; 2
 25a:	44 31       	cpi	r20, 0x14	; 20
 25c:	51 05       	cpc	r21, r1
 25e:	48 f4       	brcc	.+18     	; 0x272 <main+0x1f2>
			PORTD &= (0<<7)&(0<<4); //Set Center and corresponding select pins low
 260:	8b b1       	in	r24, 0x0b	; 11
 262:	1b b8       	out	0x0b, r1	; 11
			PORTB &= (0<<0); //Set corresponding select pin low
 264:	85 b1       	in	r24, 0x05	; 5
 266:	15 b8       	out	0x05, r1	; 5
			PORTD |= (1<<6)|(1<<5); //Set corresponding select pins and Y_CTRL high
 268:	8b b1       	in	r24, 0x0b	; 11
 26a:	80 66       	ori	r24, 0x60	; 96
 26c:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 26e:	23 2f       	mov	r18, r19
 270:	1a cf       	rjmp	.-460    	; 0xa6 <main+0x26>
		}
		//Positive Y3
		else if (adc_value > 745 && adc_value <= 760){
 272:	ac 01       	movw	r20, r24
 274:	4a 5e       	subi	r20, 0xEA	; 234
 276:	52 40       	sbci	r21, 0x02	; 2
 278:	4f 30       	cpi	r20, 0x0F	; 15
 27a:	51 05       	cpc	r21, r1
 27c:	48 f4       	brcc	.+18     	; 0x290 <main+0x210>
			PORTD &= (0<<6)&(0<<4); //Set Center and select pins low
 27e:	8b b1       	in	r24, 0x0b	; 11
 280:	1b b8       	out	0x0b, r1	; 11
			PORTB &= (0<<0); //Set corresponding select pin low
 282:	85 b1       	in	r24, 0x05	; 5
 284:	15 b8       	out	0x05, r1	; 5
			PORTD |= (1<<7)|(1<<5); //Set corresponding select pins and Y_CTRL high
 286:	8b b1       	in	r24, 0x0b	; 11
 288:	80 6a       	ori	r24, 0xA0	; 160
 28a:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 28c:	23 2f       	mov	r18, r19
 28e:	0b cf       	rjmp	.-490    	; 0xa6 <main+0x26>
		}
		//Positive Y4
		else if (adc_value > 760){
 290:	89 3f       	cpi	r24, 0xF9	; 249
 292:	92 40       	sbci	r25, 0x02	; 2
 294:	08 f4       	brcc	.+2      	; 0x298 <main+0x218>
 296:	07 cf       	rjmp	.-498    	; 0xa6 <main+0x26>
			PORTD &= (0<<4); //Set Center low
 298:	8b b1       	in	r24, 0x0b	; 11
 29a:	1b b8       	out	0x0b, r1	; 11
			PORTB &= (0<<0); //Set corresponding select pin low
 29c:	85 b1       	in	r24, 0x05	; 5
 29e:	15 b8       	out	0x05, r1	; 5
			PORTD |= (1<<7)|(1<<6)|(1<<5); //Set corresponding select pins and Y_CTRL high
 2a0:	8b b1       	in	r24, 0x0b	; 11
 2a2:	80 6e       	ori	r24, 0xE0	; 224
 2a4:	8b b9       	out	0x0b, r24	; 11
			centered = false; //Set flag for next conversion
 2a6:	23 2f       	mov	r18, r19
 2a8:	fe ce       	rjmp	.-516    	; 0xa6 <main+0x26>

000002aa <_exit>:
 2aa:	f8 94       	cli

000002ac <__stop_program>:
 2ac:	ff cf       	rjmp	.-2      	; 0x2ac <__stop_program>
